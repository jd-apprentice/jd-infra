# A sample workflow which checks out your Infrastructure as Code Configuration files,
# such as Kubernetes, Helm & Terraform and scans them for any security issues.
# The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Infrastructure as Code
on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions: write-all
  
jobs:
  snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check configuration files for security issues
        continue-on-error: true
        id: snyk
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.TOKEN }}
        with:
          args: --severity-threshold=high --report
      
  send-message:
    runs-on: ubuntu-latest
    steps:
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }} :rocket:\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":star: *GitHub Action build result*: ${{ job.status }} :rocket:\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  },
                  "accessory": {
                    "type": "image",
                    "image_url": "${{ job.status == 'failure' ? 'https://media.tenor.com/e5TDUiAGEowAAAAC/pipes-bursting.gif' : 'https://www.reddit.com/media?url=https%3A%2F%2Fi.redd.it%2Fitxnrmdtqpd81.png' }}",
                    "alt_text": "Status"
                  },
                  "color": "${{ job.status == 'failure' ? '#FF5733' : '#36a64f' }}"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


